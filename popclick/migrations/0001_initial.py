# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-08 20:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=2080)),
                ('href', models.CharField(max_length=2083, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Interest')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Page')),
            ],
        ),
        migrations.CreateModel(
            name='PageObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selector', models.CharField(max_length=5000)),
                ('href', models.CharField(max_length=2083)),
                ('text', models.CharField(max_length=3000)),
                ('selections', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Page')),
            ],
        ),
        migrations.CreateModel(
            name='PageobjectInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(default=1)),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Interest')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=0)),
                ('token', models.CharField(max_length=200, unique=True)),
                ('logtime', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(default=None, max_length=20)),
                ('activated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Interest')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePageobject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selections', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pageobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.PageObject')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePageobjectLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logtime', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_pageobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.ProfilePageobject')),
            ],
        ),
        migrations.CreateModel(
            name='SecureAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', fernet_fields.fields.EncryptedTextField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Page')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=2083, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='interests',
            field=models.ManyToManyField(through='popclick.ProfileInterest', to='popclick.Interest'),
        ),
        migrations.AddField(
            model_name='pageobjectinterest',
            name='pageobject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Profile'),
        ),
        migrations.AddField(
            model_name='page',
            name='profiles',
            field=models.ManyToManyField(to='popclick.Profile'),
        ),
        migrations.AddField(
            model_name='page',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='popclick.Website'),
        ),
        migrations.AlterUniqueTogether(
            name='profilepageobject',
            unique_together=set([('profile', 'pageobject')]),
        ),
        migrations.AlterUniqueTogether(
            name='profileinterest',
            unique_together=set([('profile', 'interest')]),
        ),
        migrations.AlterUniqueTogether(
            name='pageobjectinterest',
            unique_together=set([('pageobject', 'interest')]),
        ),
        migrations.AlterUniqueTogether(
            name='pageobject',
            unique_together=set([('page', 'href', 'selector')]),
        ),
        migrations.AlterUniqueTogether(
            name='pageinterest',
            unique_together=set([('page', 'interest')]),
        ),
    ]
